type TraceHeader {
    hostname: String
    agentVersion: String
    runtimeVersion: String
    uname: String
    schemaTag: String
    schemaHash: String
}

type TraceStartTime {
    seconds: String,
    nanos: Int,
}

type TraceEndTime {
    seconds: String,
    nanos: Int,
}

type TraceRequestHeader {
    key: String
    value: String
}

type TraceHttp {
    method: String
    requestHeaders: [TraceRequestHeader]
}

type TraceChild {
    index: Int
    depth: Int
    fieldName: String
    type: String
    startTime: String
    endTime: String
}

type Trace {
    id: ID!
    header: TraceHeader
    queryId: String
    startTime: TraceStartTime
    endTime: TraceEndTime
    clientName: String
    clientVersion: String
    http: TraceHttp
    clientReferenceId: String
    durationNs: String
    child: [TraceChild]
}

type ValueStringAggregation {
    value: String
    count: Int
    percentage: Float
}

type ValueNumberAggregation {
    avg: Float
    min: Float
    max: Float
}

type TraceHeaderAggregation {
    hostname: [ValueStringAggregation]
    agentVersion: [ValueStringAggregation]
    runtimeVersion: [ValueStringAggregation]
    uname: [ValueStringAggregation]
    schemaTag: [ValueStringAggregation]
    schemaHash: [ValueStringAggregation]
}

type GroupStatistics {
    durationNs: ValueNumberAggregation,
    header: TraceHeaderAggregation,
}

type GroupByQueryId {
    queryId: String
    count: Int
    statistics: GroupStatistics
    traces: [Trace]
}

type Query {
    traces(skip: Int, limit: Int): [Trace]
    trace(id: ID!): Trace
    tracesByQueryId(queryId: String!): [Trace]
    tracesDistinctByQueryId(skip: Int, limit: Int): [GroupByQueryId]
}